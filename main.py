import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from pycaret.clustering import load_model, predict_model

st.set_page_config(page_title="–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è –∫—Ä–∞—ó–Ω", layout="wide")

st.title("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ2 ‚Äî –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è –∫—Ä–∞—ó–Ω")

uploaded_file = st.file_uploader("–§–∞–π–ª", type=['csv'])

if uploaded_file:
    df = pd.read_csv(uploaded_file)
    st.success("–§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")

    st.subheader("–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –¥–∞–Ω–∏—Ö")
    st.dataframe(df.head())

    # 3. –û–ø–∏—Å –æ–∑–Ω–∞–∫
    st.subheader("–û–ø–∏—Å –æ–∑–Ω–∞–∫ (features)")
    features = {
        'country': '–ù–∞–∑–≤–∞ –∫—Ä–∞—ó–Ω–∏.',
        'child_mort': '–î–∏—Ç—è—á–∞ —Å–º–µ—Ä—Ç–Ω—ñ—Å—Ç—å (–Ω–∞ 1000 –¥—ñ—Ç–µ–π).',
        'exports': '–ï–∫—Å–ø–æ—Ä—Ç —è–∫ % –≤—ñ–¥ –í–í–ü.',
        'health': '–í–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ –æ—Ö–æ—Ä–æ–Ω—É –∑–¥–æ—Ä–æ–≤‚Äô—è (% –≤—ñ–¥ –í–í–ü).',
        'imports': '–Ü–º–ø–æ—Ä—Ç —è–∫ % –≤—ñ–¥ –í–í–ü.',
        'income': '–°–µ—Ä–µ–¥–Ω—ñ–π –¥–æ—Ö—ñ–¥ –Ω–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–Ω—è (USD).',
        'inflation': '–Ü–Ω—Ñ–ª—è—Ü—ñ—è (%).',
        'life_expec': '–û—á—ñ–∫—É–≤–∞–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∂–∏—Ç—Ç—è (—Ä–æ–∫–∏).',
        'total_fer': '–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –Ω–∞—Ä–æ–¥–∂—É–≤–∞–Ω–æ—Å—Ç—ñ.',
        'gdpp': '–í–í–ü –Ω–∞ –¥—É—à—É –Ω–∞—Å–µ–ª–µ–Ω–Ω—è (USD).'
    }
    st.table(pd.DataFrame(features.items(), columns=["–û–∑–Ω–∞–∫–∞", "–û–ø–∏—Å"]))

    # 4. –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è
    st.subheader("–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö")
    selected_feature = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –æ–∑–Ω–∞–∫—É –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—ñ—Å—Ç–æ–≥—Ä–∞–º–∏:", df.columns[1:])
    fig, ax = plt.subplots()
    sns.histplot(df[selected_feature], kde=True, ax=ax)
    ax.set_title(f"–†–æ–∑–ø–æ–¥—ñ–ª –æ–∑–Ω–∞–∫–∏: {selected_feature}")
    ax.set_xlabel(selected_feature)
    st.pyplot(fig)

    # 5. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ —Ç–∞ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è
    st.subheader("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ —Ç–∞ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è")
    model = load_model("load_model")  # –≤–∞–∂–ª–∏–≤–æ: —Ñ–∞–π–ª –º–∞—î –±—É—Ç–∏ –≤ –æ–¥–Ω—ñ–π –ø–∞–ø—Ü—ñ –∑ lab2.py
    clustered_df = predict_model(model, data=df.drop(columns=['country']))
    clustered_df['country'] = df['country']

    st.success("–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

    # 6. –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó
    st.subheader("–ö—Ä–∞—ó–Ω–∏ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –∫–ª–∞—Å—Ç–µ—Ä–∏")
    st.dataframe(clustered_df[['country', 'Cluster']])

    # 7. –ê–Ω–∞–ª—ñ–∑ –∫–ª–∞—Å—Ç–µ—Ä—ñ–≤
    st.subheader("–ê–Ω–∞–ª—ñ–∑ –∫–ª–∞—Å—Ç–µ—Ä—ñ–≤ (—Å–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è)")
    cluster_summary = clustered_df.groupby('Cluster').mean(numeric_only=True)
    st.dataframe(cluster_summary)

    # 8. –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É –∫—Ä–∞—ó–Ω –ø–æ –∫–ª–∞—Å—Ç–µ—Ä–∞–º
    st.subheader("üó∫–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–∞—ó–Ω —É –∫–æ–∂–Ω–æ–º—É –∫–ª–∞—Å—Ç–µ—Ä—ñ")
    fig2, ax2 = plt.subplots()
    cluster_counts = clustered_df['Cluster'].value_counts().sort_index()
    cluster_counts.plot(kind='bar', ax=ax2)
    ax2.set_xlabel("–ö–ª–∞—Å—Ç–µ—Ä")
    ax2.set_ylabel("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–∞—ó–Ω")
    ax2.set_title("–†–æ–∑–ø–æ–¥—ñ–ª –∫—Ä–∞—ó–Ω –ø–æ –∫–ª–∞—Å—Ç–µ—Ä–∞–º")
    st.pyplot(fig2)
